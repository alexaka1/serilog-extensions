name: AOT Tests
on:
  pull_request:
    paths-ignore:
      - '**.md'
  workflow_dispatch:
  workflow_call:
permissions: { }
env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  CI: true
jobs:
  aot-test:
    name: AOT Tests
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest
          - macos-latest
          - ubuntu-24.04-arm
          - windows-11-arm
        dotnet-version:
          - '8.0.x'
          - '9.0.x'
    runs-on: ${{ matrix.os }}

    permissions:
      contents: read

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@v2
        with:
          disable-sudo: false
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.nuget.org:443
            crl3.digicert.com:80
            crl4.digicert.com:80
            dc.services.visualstudio.com:443
            dotnetbuilds.azureedge.net:443
            dotnetcli.azureedge.net:443
            s.symcb.com:80
            ts-crl.ws.symantec.com:80
            www.microsoft.com:80
            github.com:443
            results-receiver.actions.githubusercontent.com:443
            *.blob.core.windows.net:443
            api.github.com:443
            *.actions.githubusercontent.com:443
            codeload.github.com:443
            ghcr.io:443
            *.actions.githubusercontent.com:443
            objects.githubusercontent.com:443
            objects-origin.githubusercontent.com:443
            github-releases.githubusercontent.com:443
            github-registry-files.githubusercontent.com:443

      - name: Checkout code
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Setup Dotnet
        id: dotnet-setup
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ matrix.dotnet-version }}

      - name: Set target framework
        id: target-framework
        shell: bash
        run: |
          if [[ "${{ matrix.dotnet-version }}" == "8.0.x" ]]; then
            echo "target-framework=net8.0" >> $GITHUB_OUTPUT
          else
            echo "target-framework=net9.0" >> $GITHUB_OUTPUT
          fi

      - name: Set architecture
        id: architecture
        shell: bash
        run: |
          echo "arch=$(echo '${{ runner.arch }}' | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Dotnet restore
        run: dotnet restore --arch ${{ steps.architecture.outputs.arch }}

      - name: Test AOT test project normally (pre-flight)
        run: >
          dotnet run
          --project test/Serilog.Extensions.Formatting.AotTest/
          --configuration Release 
          --framework ${{ steps.target-framework.outputs.target-framework }}
          --no-restore

      - name: AOT Publish
        run: >
          dotnet publish test/Serilog.Extensions.Formatting.AotTest/
          --configuration Release
          --framework ${{ steps.target-framework.outputs.target-framework }}
          --arch ${{ steps.architecture.outputs.arch }}
          --no-restore

      - name: Set runtime identifier for paths
        id: runtime-id
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            ubuntu-latest|ubuntu-24.04-arm)
              if [[ "${{ steps.architecture.outputs.arch }}" == "arm64" ]]; then
                echo "rid=linux-arm64" >> $GITHUB_OUTPUT
              else
                echo "rid=linux-x64" >> $GITHUB_OUTPUT
              fi
              ;;
            windows-latest|windows-11-arm)
              if [[ "${{ steps.architecture.outputs.arch }}" == "arm64" ]]; then
                echo "rid=win-arm64" >> $GITHUB_OUTPUT
              else
                echo "rid=win-x64" >> $GITHUB_OUTPUT
              fi
              ;;
            macos-latest)
              if [[ "${{ steps.architecture.outputs.arch }}" == "arm64" ]]; then
                echo "rid=osx-arm64" >> $GITHUB_OUTPUT
              else
                echo "rid=osx-x64" >> $GITHUB_OUTPUT
              fi
              ;;
          esac

      - name: Set executable paths
        id: paths
        shell: bash
        run: |
          case "${{ matrix.os }}" in
            windows-latest|windows-11-arm)
              echo "exe-name=Serilog.Extensions.Formatting.AotTest.exe" >> $GITHUB_OUTPUT
              ;;
            *)
              echo "exe-name=Serilog.Extensions.Formatting.AotTest" >> $GITHUB_OUTPUT
              ;;
          esac

      - name: Test AOT published executable (Windows)
        if: startsWith(matrix.os, 'windows')
        run: >
          ./test/Serilog.Extensions.Formatting.AotTest/bin/Release/${{ steps.target-framework.outputs.target-framework }}/${{ steps.runtime-id.outputs.rid }}/publish/${{ steps.paths.outputs.exe-name }}

      - name: Test AOT published executable (Unix)
        if: "!startsWith(matrix.os, 'windows')"
        run: >
          ./test/Serilog.Extensions.Formatting.AotTest/bin/Release/${{ steps.target-framework.outputs.target-framework }}/${{ steps.runtime-id.outputs.rid }}/publish/${{ steps.paths.outputs.exe-name }}

      - name: Upload AOT executable artifact
        uses: actions/upload-artifact@v4
        with:
          name: aot-executable-${{ matrix.os }}-${{ steps.target-framework.outputs.target-framework }}-${{ steps.architecture.outputs.arch }}
          path: |
            test/Serilog.Extensions.Formatting.AotTest/bin/Release/${{ steps.target-framework.outputs.target-framework }}/${{ steps.runtime-id.outputs.rid }}/publish/
          retention-days: 1