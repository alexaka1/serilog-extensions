name: Release
on:
  push:
    branches:
      - main
      - feature/release-test
concurrency: ${{ github.workflow }}-${{ github.ref }}
permissions: { }
env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_NOLOGO: true
  dotnet: 8.0.x
  node: 20.x
  Project: src/Serilog.Extensions.Formatting
  PackageJson: src/Serilog.Extensions.Formatting/package.json
  Csproj: src/Serilog.Extensions.Formatting/Serilog.Extensions.Formatting.csproj
  PackageName: alexaka1.serilog.extensions.formatting
jobs:
  tests:
    name: Tests
    uses: ./.github/workflows/tests.yml
    permissions:
      contents: read
  check-release:
    name: Prepare release
    runs-on: ubuntu-24.04
    permissions:
      pull-requests: write
      contents: write
      issues: read
    outputs:
      publishable: ${{ steps.pack.outputs.canPack == 'true'}}
      version: ${{ steps.pack.outputs.version }}
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          disable-sudo: true
          egress-policy: block
          allowed-endpoints: >
            aka.ms:443
            api.github.com:443
            api.nuget.org:443
            cdn.fwupd.org:443
            crl3.digicert.com:80
            dotnetbuilds.azureedge.net:443
            dotnetcli.azureedge.net:443
            github.com:443
            registry.npmjs.org:443
            registry.yarnpkg.com:443
            repo.yarnpkg.com:443
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          persist-credentials: false
      - name: Setup Dotnet ${{ env.dotnet }}
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: ${{ env.dotnet }}
      - name: Setup Node.js ${{ env.node }}
        uses: actions/setup-node@1e60f620b9541d16bece96c5465dc8ee9832be0b # v4.0.3
        with:
          node-version: ${{ env.node }}
      - name: Enable Corepack
        run: corepack enable
      - name: Yarn install
        run: yarn install --immutable
      - name: Create Release Pull Request or Allow Pack
        id: changesets
        uses: changesets/action@aba318e9165b45b7948c60273e0b72fce0a64eb9 # v1.4.7
        with:
          # outputs versionExists=true if version already exists on nuget
          version: yarn run version ${{ env.PackageJson }} ${{ env.Csproj }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Can pack?
        id: pack
        if: steps.changesets.outputs.hasChangesets == 'false'
        run: |
          set -e
          VERSION=$(jq -r '.version' "${{ env.PackageJson }}")
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          AVAILABLE_VERSIONS=$(curl -s "https://api.nuget.org/v3-flatcontainer/${{ env.PackageName }}/index.json" | jq -r '.versions[]')
          if echo "$AVAILABLE_VERSIONS" | grep -q "^$VERSION$"; then
            echo "canPack=false" >> "$GITHUB_OUTPUT"
          else
            echo "canPack=true" >> "$GITHUB_OUTPUT"
          fi
      - name: Dotnet restore
        if: steps.pack.outputs.canPack == 'true'
        run: dotnet restore ${{ env.Project }}
      - name: Dotnet build
        if: steps.pack.outputs.canPack == 'true'
        run: dotnet build ${{ env.Project }} --configuration Release --no-restore
      - name: Pack nuget
        if: steps.pack.outputs.canPack == 'true'
        run: dotnet pack ${{ env.Project }} -c Release -o ${{ github.workspace }}/artifacts
      - name: Upload nuget
        if: steps.pack.outputs.canPack == 'true'
        uses: actions/upload-artifact@834a144ee995460fba8ed112a2fc961b36a5ec5a # v4.3.6
        with:
          name: nuget
          path: ${{ github.workspace }}/artifacts
          if-no-files-found: error
  release:
    name: Release package
    runs-on: ubuntu-latest
    if: needs.check-release.outputs.publishable == 'true'
    needs:
      - check-release
#      - tests
    permissions:
      contents: write
    env:
      email: actions.github@mail.martossy.hu
      name: GitHub Actions (alexaka1)
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@5c7944e73c4c2a096b17a9cb74d65b6c2bbafbde # v2.9.1
        with:
          egress-policy: audit
      - name: Git identity
        run: |
          git config --global user.email "${{ env.email }}"
          git config --global user.name "${{ env.name }}"
      - name: Checkout code
        uses: actions/checkout@692973e3d937129bcbf40652eb9f2f61becf3332 # v4.1.7
        with:
          # we use credentials to push tags below
          persist-credentials: true
      - name: Download nuget
        uses: actions/download-artifact@fa0a91b85d4f404e444e00e005971372dc801d16 # v4.1.8
        with:
          name: nuget
          path: ${{ github.workspace }}/artifacts
          github-token: ${{ github.token }}
      - name: Setup Dotnet ${{ env.dotnet }}
        if: false
        uses: actions/setup-dotnet@6bd8b7f7774af54e05809fcc5431931b3eb1ddee # v4.0.1
        with:
          dotnet-version: ${{ env.dotnet }}
      - name: Publish Nuget
        if: false
        run: dotnet nuget push ${{ github.workspace }}/artifacts/*.nupkg -s https://api.nuget.org/v3/index.json -k ${{ secrets.NUGET_API_KEY }}
      - name: Tag release
        if: false
        run: |
          git tag -a v${{ needs.check-release.outputs.version }} -m "Release v${{ needs.check-release.outputs.version }}"
          git push origin v${{ needs.check-release.outputs.version }}
      - name: Changelog
        id: changelog
        run: |
          input_file="src/Serilog.Extensions.Formatting/CHANGELOG.md"
          output_file="changes.md"
          # Find the line number of the first version heading
          start_line=$(grep -nE '^## [0-9]+\.[0-9]+\.[0-9]' "$input_file" | head -n 1 | cut -d: -f1)

          # Find the line number of the next version heading, if it exists
          end_line=$(grep -nE '^## [0-9]+\.[0-9]+\.[0-9]' "$input_file" | sed -n '2p' | cut -d: -f1)

          if [ -z "$end_line" ]; then
            # If there is no next version, extract till the end of the file
            sed -n "${start_line},\$p" "$input_file" > "$output_file"
          else
            # Extract only the section for the uppermost version
            sed -n "${start_line},$(($end_line-1))p" "$input_file" > "$output_file"
          fi
          echo "changes=$output_file" >> "$GITHUB_OUTPUT"
          prerelease=false
          if [ -f ".changeset/pre.json" ]; then
            prerelease=true
          fi
          echo "prerelease=$prerelease" >> "$GITHUB_OUTPUT"
          ls -latr ${{ github.workspace }}/artifacts
      - name: Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ${{ github.workspace }}/artifacts/*.nupkg
            ${{ github.workspace }}/artifacts/*.snupkg
          body_path: ${{ steps.changelog.outputs.changes }}
          body: Oh no, it looks the change-notes were not generated correctly by the action.
          # TODO: set false
          draft: true
          prerelease: ${{ steps.changelog.outputs.prerelease == 'true' }}
          generate_release_notes: true
          fail_on_unmatched_files: true
          append_body: true
          tag_name: v${{ needs.check-release.outputs.version }}
          target_commitish: ${{ github.sha }}
